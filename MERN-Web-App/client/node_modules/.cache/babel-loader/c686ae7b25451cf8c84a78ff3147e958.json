{"ast":null,"code":"var _jsxFileName = \"C:\\\\CV\\\\MERN App_photo manager\\\\MERN-Web-App\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useHistory } from 'react-router-dom';\nimport Input from './Input';\nimport Icon from './icon'; // import { render } from 'react-dom';\n\nimport { signin, signup } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(formData);\n\n    if (isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    // console.log(\"YAYYYYY Successful GOOGLE Sign IN\");\n    // console.log(res);\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google Sign In was unsuccessful. Try Again\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"679791033426-7i5m8msesjsjt2s7tr9h01ikuc2644m1.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 170\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already has an account ? Sign In' : \"Don't have an account ? Sign UP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"D8mY8jaSqFZ/YEycqn55OW3kSws=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/CV/MERN App_photo manager/MERN-Web-App/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","useDispatch","useStyles","LockOutlinedIcon","useHistory","Input","Icon","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,UAApC,EAA+CC,SAA/C,QAA+D,mBAA/D;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,oBAA5B;;;AACA,MAAMC,YAAY,GAAG;AAACC,EAAAA,SAAS,EAAE,EAAZ;AAAeC,EAAAA,QAAQ,EAAC,EAAxB;AAA4BC,EAAAA,KAAK,EAAC,EAAlC;AAAqCC,EAAAA,QAAQ,EAAC,EAA9C;AAAiDC,EAAAA,eAAe,EAAC;AAAjE,CAArB;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,OAAO,GAAEd,SAAS,EAAxB;AACA,QAAM,CAACe,YAAD,EAAcC,eAAd,IAAiCzB,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAAC4B,QAAD,EAAUC,WAAV,IAAyB7B,QAAQ,CAACgB,YAAD,CAAvC;AACA,QAAMc,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGpB,UAAU,EAA1B;;AACA,QAAMqB,kBAAkB,GAAG,MAAMP,eAAe,CAAEQ,gBAAD,IAAsB,CAACA,gBAAxB,CAAhD;;AAEA,QAAMC,YAAY,GAAIC,CAAF,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAEvB;;AACA,QAAGV,QAAH,EAAY;AACRI,MAAAA,QAAQ,CAACf,MAAM,CAACa,QAAD,EAAUG,OAAV,CAAP,CAAR;AACH,KAFD,MAEK;AACDD,MAAAA,QAAQ,CAAChB,MAAM,CAACc,QAAD,EAAUG,OAAV,CAAP,CAAR;AACH;AACJ,GARD;;AASA,QAAMM,YAAY,GAAKF,CAAF,IAAO;AACxBN,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACO,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAAxC,KAAD,CAAX;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAC,MAAK;AAClBd,IAAAA,WAAW,CAAEe,YAAD,IAAiB,CAACA,YAAnB,CAAX;AACAjB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAKA,QAAMkB,aAAa,GAAE,MAAOC,GAAP,IAAc;AAC/B;AACA;AACA,UAAMC,MAAM,GAAED,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEE,UAAnB;AACA,UAAMC,KAAK,GAAEH,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEI,OAAlB;;AAEA,QAAI;AACAlB,MAAAA,QAAQ,CAAC;AAACmB,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,IAAI,EAAG;AAACL,UAAAA,MAAD;AAAQE,UAAAA;AAAR;AAAtB,OAAD,CAAR;AACAhB,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAZD;;AAaA,QAAMG,aAAa,GAAGH,KAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAE,IAAtC;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE/B,OAAO,CAACiC,KAA1B;AAAiC,MAAA,SAAS,EAAG,CAA7C;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEjC,OAAO,CAACkC,MAA3B;AAAA,+BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBAA2B/B,QAAQ,GAAG,SAAH,GAAe;AAAlD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAM,QAAA,SAAS,EAAEH,OAAO,CAACmC,IAAzB;AAA+B,QAAA,QAAQ,EAAExB,YAAzC;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,qBACKR,QAAQ,iBACD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,WAAZ;AAAwB,cAAA,KAAK,EAAC,YAA9B;AAA2C,cAAA,YAAY,EAAGW,YAA1D;AAAwE,cAAA,SAAS,MAAjF;AAAkF,cAAA,IAAI;AAAtF;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,KAAK,EAAC,WAA7B;AAAyC,cAAA,YAAY,EAAGA,YAAxD;AAAsE,cAAA,IAAI;AAA1E;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BAFZ,eAOI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,KAAK,EAAC,eAA1B;AAA0C,YAAA,YAAY,EAAEA,YAAxD;AAAsE,YAAA,IAAI,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,KAAK,EAAC,UAA7B;AAAwC,YAAA,YAAY,EAAEA,YAAtD;AAAoE,YAAA,IAAI,EAAEb,YAAY,GAAG,MAAH,GAAW,UAAjG;AAA6G,YAAA,kBAAkB,EAAEQ;AAAjI;AAAA;AAAA;AAAA;AAAA,kBARJ,EASKN,QAAQ,iBAAI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,iBAAZ;AAA8B,YAAA,KAAK,EAAC,iBAApC;AAAsD,YAAA,YAAY,EAAEW,YAApE;AAAkF,YAAA,IAAI,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,kBATjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,MAA/B;AAAgC,UAAA,OAAO,EAAC,WAAxC;AAAoD,UAAA,KAAK,EAAE,SAA3D;AAAqE,UAAA,SAAS,EAAGd,OAAO,CAACoC,MAAzF;AAAA,oBACKjC,QAAQ,GAAG,SAAH,GAAc;AAD3B;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAeI,QAAC,WAAD;AACI,UAAA,QAAQ,EAAC,0EADb;AAEI,UAAA,MAAM,EAAKkC,WAAD,iBACN,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAErC,OAAO,CAACsC,YAA3B;AAAyC,YAAA,KAAK,EAAC,SAA/C;AAAyD,YAAA,SAAS,MAAlE;AAAmE,YAAA,OAAO,EAAED,WAAW,CAACE,OAAxF;AAAiG,YAAA,QAAQ,EAAEF,WAAW,CAACG,QAAvH;AAAiI,YAAA,SAAS,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBAA7I;AAAsJ,YAAA,OAAO,EAAE,WAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAKI,UAAA,SAAS,EAAEpB,aALf;AAMI,UAAA,SAAS,EAAEY,aANf;AAOI,UAAA,YAAY,EAAC;AAPjB;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAyBI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,cAAc,EAAC,UAA/B;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAGd,UAAlB;AAAA,wBACKf,QAAQ,GAAG,kCAAH,GAAwC;AADrD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CAxFD;;GAAMJ,I;UACab,S,EAKED,W,EACDG,U;;;KAPdW,I;AAyFN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport {Avatar, Button,Paper, Grid, Typography,Container} from '@material-ui/core';\r\nimport {GoogleLogin} from 'react-google-login';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport useStyles from './styles';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from './Input';\r\nimport Icon from './icon';\r\n// import { render } from 'react-dom';\r\nimport {signin,signup} from '../../actions/auth';\r\nconst initialState = {firstName: '',lastName:'', email:'',password:'',confirmPassword:''};\r\n\r\n\r\n\r\nconst Auth = ( )=> {\r\n    const classes =useStyles();\r\n    const [showPassword,setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n\r\n    const [formData,setFormData] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const handleShowPassword = ( )=> setShowPassword((prevShowPassword) => !prevShowPassword)\r\n\r\n    const handleSubmit =( e) =>{\r\n        e.preventDefault();\r\n        // console.log(formData);\r\n        if(isSignup){\r\n            dispatch(signup(formData,history));\r\n        }else{\r\n            dispatch(signin(formData,history));\r\n        }\r\n    };\r\n    const handleChange = ( e) =>{\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n    const switchMode=( )=>{\r\n        setIsSignup((prevIsSignup)=> !prevIsSignup);\r\n        setShowPassword(false);\r\n    }\r\n\r\n    const googleSuccess =async (res) =>{\r\n        // console.log(\"YAYYYYY Successful GOOGLE Sign IN\");\r\n        // console.log(res);\r\n        const result =res?.profileObj;\r\n        const token =res?.tokenId;\r\n\r\n        try {\r\n            dispatch({type: 'AUTH' ,data : {result,token} });\r\n            history.push('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n    const googleFailure =(error) =>{\r\n        console.log(error);\r\n        console.log(\"Google Sign In was unsuccessful. Try Again\");\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth =\"xs\">\r\n            <Paper className={classes.paper} elevation ={3} >\r\n                <Avatar className={classes.avatar} >\r\n                    <LockOutlinedIcon />    \r\n                </Avatar>\r\n                <Typography variant=\"h5\" >{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit} >\r\n                    <Grid container spacing={2} >\r\n                        {isSignup && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange ={handleChange} autoFocus half/>\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange ={handleChange} half/>\r\n                                </>\r\n                        )}\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" :\"password\"} handleShowPassword={handleShowPassword} />\r\n                        {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/> }\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color =\"primary\" className ={classes.submit}>\r\n                        {isSignup ? 'Sign Up': 'Sign In'}\r\n                    </Button>\r\n                    <GoogleLogin \r\n                        clientId=\"679791033426-7i5m8msesjsjt2s7tr9h01ikuc2644m1.apps.googleusercontent.com\"\r\n                        render = {(renderProps)=>(\r\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon= {<Icon/>} variant =\"contained\" >Google Sign In</Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy='single_host_origin'\r\n                    />\r\n                    \r\n                    <Grid container justifyContent=\"flex-end\" >\r\n                        <Grid item>\r\n                            <Button onClick= {switchMode} >\r\n                                {isSignup ? 'Already has an account ? Sign In' : \"Don't have an account ? Sign UP\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}