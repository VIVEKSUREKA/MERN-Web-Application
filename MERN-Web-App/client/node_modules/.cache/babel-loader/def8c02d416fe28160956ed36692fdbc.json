{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nimport { FETCH_ALL, CREATE, DELETE, UPDATE, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["C:/CV/MERN App_photo manager/MERN-Web-App/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","DELETE","UPDATE","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA;AACA,SAAQA,SAAR,EAAkBC,MAAlB,EAAyBC,MAAzB,EAAgCC,MAAhC,EAAuCC,IAAvC,QAAkD,0BAAlD;AACA,gBAAe,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,EAAc;AAAA,MAAVC,MAAU;;AAClC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,SAAL;AACI,aAAOM,MAAM,CAACE,OAAd;;AACJ,SAAKL,MAAL;AACI,aAAOE,KAAK,CAACI,GAAN,CAAWC,IAAD,IAASA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAtE,CAAP;;AACJ,SAAKT,MAAL;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKN,MAAL;AACI,aAAOG,KAAK,CAACO,MAAN,CAAcF,IAAD,IAASA,IAAI,CAACC,GAAL,KAAYL,MAAM,CAACE,OAAzC,CAAP;;AACJ,SAAKJ,IAAL;AACI,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAASA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAtE,CAAP;;AACJ;AACI,aAAOL,KAAP;AAZR;AAcH,CAfD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport {FETCH_ALL,CREATE,DELETE,UPDATE,LIKE} from '../constants/actionTypes';\r\nexport default (posts = [], action)=> {\r\n    switch(action.type){\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case UPDATE:\r\n            return posts.map((post)=> post._id === action.payload._id ? action.payload : post);\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case DELETE:\r\n            return posts.filter((post)=> post._id!== action.payload);\r\n        case LIKE:\r\n            return posts.map((post)=> post._id === action.payload._id ? action.payload : post);\r\n        default:\r\n            return posts;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}